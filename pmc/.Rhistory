options(htmltools.dir.version = FALSE)
options(htmltools.preserve.raw = FALSE)
knitr::opts_chunk$set(
echo = FALSE,
warning   = FALSE,  # exibir avisos do console?
message   = FALSE,  # exibir mensagens do console?
dpi       = 300,    # resolução
fig.align = "center"# alinhamento de imagens
)
## Pacotes utilizados nessa apresentação
library(tidyverse)
library(lubridate)
library(tstools)
library(sidrar)
library(zoo)
library(scales)
library(gridExtra)
library(tsibble)
library(timetk)
library(knitr)
library(kableExtra)
# Acumular  valores percentuais em 'n' janelas móveis
acum_i <- function(data, n){
data_ma_n <- RcppRoll::roll_meanr(data, n)
data_lag_n <- dplyr::lag(data_ma_n, n)
data_acum_n = (((data_ma_n/data_lag_n)-1)*100)
return(data_acum_n)
}
names <- c('date', 'receita', 'volume', 'receita_sa', 'volume_sa')
foot_ibge <- "Fonte: ADEPE com dados do IBGE"
## Coleta e Tratamento dos Dados
ampliado = '/t/8881/n1/all/v/7169,7170/p/all/c11046/all/d/v7169%205,v7170%205' %>%
sidrar::get_sidra(api =.) %>%
mutate(date = parse_date(`Mês (Código)`, format = "%Y%m")) %>%
dplyr::select(`Variável`, date, `Tipos de índice`, Valor) %>%
spread(`Variável`, Valor) %>%
pivot_wider(id_cols = date,
names_from = 'Tipos de índice',
values_from = c('PMC - Número-índice (2022=100)',
'PMC - Número-índice com ajuste sazonal (2022=100)')) %>%
`colnames<-`(names) %>%
dplyr::select(date, receita, receita_sa, volume, volume_sa) %>%
tibble::as_tibble()
## Metricas
ampliado =
ampliado %>%
mutate(margem_receita = (receita_sa/lag(receita_sa,1)-1)*100) %>%
mutate(margem_volume = (volume_sa/lag(volume_sa,1)-1)*100) %>%
mutate(interanual_receita = (receita/lag(receita,12)-1)*100) %>%
mutate(interanual_volume = (volume/lag(volume,12)-1)*100) %>%
mutate(anual_receita = acum_i(receita,12)) %>%
mutate(anual_volume = acum_i(volume,12))
## Transformar de wide para long
ampliado_long =
ampliado %>%
gather(variavel, valor, -date)
## Coleta e Tratamento --------------------------
names <- c('date', 'receita', 'volume', 'receita_sa', 'volume_sa')
restrito_br = '/t/8880/n1/all/v/7169,7170/p/all/c11046/all/d/v7169%205,v7170%205' %>%
sidrar::get_sidra(api=.) %>%
dplyr::mutate(date = parse_date(`Mês (Código)`, format = "%Y%m")) %>%
select(`Variável`, date, `Tipos de índice`, Valor) %>%
spread(`Variável`, Valor) %>%
pivot_wider(id_cols = date,
names_from = 'Tipos de índice',
values_from = c('PMC - Número-índice (2022=100)',
'PMC - Número-índice com ajuste sazonal (2022=100)')) %>%
`colnames<-`(names) %>%
dplyr::select(date, receita, receita_sa, volume, volume_sa)
## Calcular Métricas ---------------------
restrito_br = restrito_br %>%
mutate(margem_receita = (receita_sa/lag(receita_sa,1)-1)*100) %>%
mutate(margem_volume = (volume_sa/lag(volume_sa,1)-1)*100) %>%
mutate(interanual_receita = (receita/lag(receita,12)-1)*100) %>%
mutate(interanual_volume = (volume/lag(volume,12)-1)*100) %>%
mutate(anual_receita = acum_i(receita,12)) %>%
mutate(anual_volume = acum_i(volume,12))
## Formato long
restrito_br_long = restrito_br %>%
gather(variavel, valor, -date)
## Coleta e Tratamento dos Dados ---------------------
ampliado_pe = '/t/8881/n3/26/v/7169,7170/p/all/c11046/all/d/v7169%205,v7170%205' %>%
sidrar::get_sidra(api=.) %>%
mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
select(`Variável`, date, `Tipos de índice`, Valor) %>%
spread(`Variável`, Valor) %>%
pivot_wider(id_cols = date,
names_from = 'Tipos de índice',
values_from = c('PMC - Número-índice (2022=100)',
'PMC - Número-índice com ajuste sazonal (2022=100)')) %>%
`colnames<-`(names) %>%
dplyr::select(date, receita, receita_sa, volume, volume_sa) %>%
as_tibble()
## Criar métricas de variação do Comércio ampliado ------------
ampliado_pe =
ampliado_pe %>%
mutate(margem_receita = (receita_sa/lag(receita_sa,1)-1)*100) %>%
mutate(margem_volume = (volume_sa/lag(volume_sa,1)-1)*100) %>%
mutate(interanual_receita = (receita/lag(receita,12)-1)*100) %>%
mutate(interanual_volume = (volume/lag(volume,12)-1)*100) %>%
mutate(anual_receita = acum_i(receita,12)) %>%
mutate(anual_volume = acum_i(volume,12))
## Transformar de wide para long --------------
ampliado_long_pe =
ampliado_pe %>%
gather(variavel, valor, -date)
# Coleta e Tratamento ----------------
restrito_pe = '/t/8880/n3/26/v/7169,7170/p/all/c11046/all/d/v7169%205,v7170%205' %>%
sidrar::get_sidra(api=.) %>%
mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
dplyr::select(`Variável`, date, `Tipos de índice`, Valor) %>%
spread(`Variável`, Valor) %>%
pivot_wider(id_cols = date,
names_from = 'Tipos de índice',
values_from = c('PMC - Número-índice (2022=100)',
'PMC - Número-índice com ajuste sazonal (2022=100)')) %>%
`colnames<-`(names) %>%
select(date, receita, receita_sa, volume, volume_sa) %>%
as_tibble()
## Metricas -----------------
## Criar métricas de variação do Comércio Restrito
restrito_pe =
restrito_pe %>%
mutate(margem_receita = (receita_sa/lag(receita_sa,1)-1)*100) %>%
mutate(margem_volume = (volume_sa/lag(volume_sa,1)-1)*100) %>%
mutate(interanual_receita = (receita/lag(receita,12)-1)*100) %>%
mutate(interanual_volume = (volume/lag(volume,12)-1)*100) %>%
mutate(anual_receita = acum_i(receita,12)) %>%
mutate(anual_volume = acum_i(volume,12))
## Transformar de wide para long
restrito_long_pe =
restrito_pe %>%
gather(variavel, valor, -date)
# Resultado por setor
## Margem Volume e Receita
margem_setor_receita = '/t/8883/n3/26/v/11709/p/all/c11046/56735/c85/all/d/v11709%201' %>%
sidrar::get_sidra(api=.) %>%
dplyr::mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
dplyr::select(date, Valor, Atividades) %>%
drop_na() %>%
dplyr::rename(margem_receita = Valor) %>%
as_tibble()
margem_setor_volume = '/t/8883/n3/26/v/11709/p/all/c11046/56736/c85/all/d/v11709%201' %>%
sidrar::get_sidra(api = .) %>%
dplyr::mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
dplyr::select(date, Valor, Atividades) %>%
drop_na() %>%
dplyr::rename(margem_volume = Valor) %>%
as_tibble()
setor_margem = inner_join(margem_setor_receita, margem_setor_volume, by = c("date", "Atividades")) %>%
dplyr::select(date, Atividades, margem_receita, margem_volume)
## Variação Interanual Volume e Receita
interanual_setor_receita = '/t/8883/n3/26/v/11710/p/all/c11046/56735/c85/all/d/v11710%201' %>%
sidrar::get_sidra(api = .)%>%
dplyr::mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
dplyr::select(date, Valor, Atividades) %>%
drop_na() %>%
dplyr::rename(interanual_receita = Valor) %>%
as_tibble()
interanual_setor_volume = '/t/8883/n3/26/v/11710/p/all/c11046/56736/c85/all/d/v11710%201' %>%
sidrar::get_sidra(api=.) %>%
dplyr::mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
dplyr::select(date, Valor, Atividades) %>%
drop_na() %>%
dplyr::rename(interanual_volume = Valor) %>%
as_tibble()
setor_interanual = inner_join(interanual_setor_receita, interanual_setor_volume, by = c("date", "Atividades")) %>%
dplyr::select(date, Atividades, interanual_receita, interanual_volume)
## Variação Anual Volume e Receita
anual_setor_receita = '/t/8883/n3/26/v/11711/p/all/c11046/56735/c85/all/d/v11711%201' %>%
sidrar::get_sidra(api = .)%>%
dplyr::mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
dplyr::select(date, Valor, Atividades) %>%
drop_na() %>%
dplyr::rename(anual_receita = Valor) %>%
as_tibble()
anual_setor_volume = '/t/8883/n3/26/v/11711/p/all/c11046/56736/c85/all/d/v11711%201' %>%
sidrar::get_sidra(api=.) %>%
dplyr::mutate(date = parse_date(`Mês (Código)`, format = '%Y%m')) %>%
dplyr::select(date, Valor, Atividades) %>%
drop_na() %>%
dplyr::rename(anual_volume = Valor) %>%
as_tibble()
setor_anual = inner_join(anual_setor_receita, anual_setor_volume, by = c("date", "Atividades")) %>%
dplyr::select(date, Atividades, anual_receita, anual_volume)
view(setor_anual)
tabela1 <- tail(setor_margem, n = 6)
view(tabela1)
# Tabela 1: Últimas 6 observações
tabela1 <- tail(setor_margem, n = 6)
kable(setor_margem,
digits = 2,
col.names = c("Data", "Setor", "Receita", "Volume"),
align = 'c',
caption = 'Variação na margem por Setor tabela 1')
kable(tabela1,
digits = 2,
col.names = c("Data", "Setor", "Receita", "Volume"),
align = 'c',
caption = 'Variação na margem por Setor tabela 1')
rm(list = ls())
